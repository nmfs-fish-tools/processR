set -x
set -e

which cmake





: ${R_HOME=`R RHOME`}
if test -z "${R_HOME}"; then
  echo "could not determine R_HOME"
  exit 1
fi
echo ${R_HOME}

RBIN="${R_HOME}"/bin/R
R_BH=$(${RBIN} --slave --no-save -e "cat(find.package('BH'))")
R_RCPP=$(${RBIN} --slave --no-save -e "cat(find.package('Rcpp'))")
R_RINSIDE=$(${RBIN} --slave --no-save -e "cat(find.package('RInside'))")

echo ${R_BH}
echo ${R_RCPP}
echo ${R_RINSIDE}

echo ${RBIN}
echo " "
RUSER=$(${RBIN} --slave --no-save -e 'cat(Sys.getenv("R_LIB_USER"))')



#echo ${RUSER}
echo " "
#: ${R_LIBS_USER=`R LIBS_USER`}
#if test -z "${R_LIBS_USER}"; then
#  echo "could not determine R_LIBS_USER"
#  exit 1
#fi

echo " "
echo " "
#echo ${R_LIBS_USER}

#RHOME=$(${RBIN} --slave --no-save -e 'cat(R.home())')


#echo ${RHOME}

rm -rf _builds

cmake -H. -B_builds \
    -DCMAKE_VERBOSE_MAKEFILE=ON \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=_install \
    -DRHOME=${R_HOME} \
    -DRBIN=${RBIN} \
    -DRCPP_HOME=${R_RCPP} \
    -DBOOST_HOME=${R_BH} \
    -DRInside_HOME=${R_RINSIDE} \
    -DCMAKE_SHARED_LIBRARY_PREFIX_CXX=""




cmake --build _builds --target install --config Release

pwd
cd src/child 



cmake -H. -G Ninja -B_builds \
    -DCMAKE_VERBOSE_MAKEFILE=ON \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=_install \
    -DRHOME=${R_HOME} \
    -DRBIN=${RBIN} \
    -DRCPP_HOME=${R_RCPP} \
    -DBOOST_HOME=${R_BH} \
    -DRInside_HOME=${R_RINSIDE} \
    -DCMAKE_SHARED_LIBRARY_PREFIX_CXX=""

cmake --build _builds --target install --config Release

cd ../..

cp _install/lib/processR.so libs/processR.so || echo "Failed: processR.so -> src"
cp _install/libs/processR.dylib inst/libs/processR.so || echo "Failed: processR.dylib -> src"
cp -a src/child/_install/bin/. inst/bin || echo "Failed: rchild -> bin"

#clean up
rm -r src/child/_install
rm -r src/child/_builds
rm -r _install
rm -r _builds

