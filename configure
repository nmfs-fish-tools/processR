set -x
set -e

which cmake

pwd



: ${R_HOME=`R RHOME`}
if test -z "${R_HOME}"; then
  echo "could not determine R_HOME"
  exit 1
fi
echo "R home is ${R_HOME}"

RBIN=${R_HOME}/bin/R
R_INCLUDE=$(${RBIN} --slave --no-save -e "cat(Sys.getenv('R_INCLUDE_DIR'))")
R_LIBRARY=${R_HOME}/lib
R_USER=$(${RBIN} --slave --no-save -e "cat(Sys.getenv('R_LIBS_USER'))")
R_BH=$(${RBIN} --slave --no-save -e "cat(find.package('BH'))")
R_BH_INCLUDE=${R_BH}/include
R_RCPP=$(${RBIN} --slave --no-save -e "cat(find.package('Rcpp'))")
R_RCPP_INCLUDE=${R_RCPP}/include
R_RCPP_LIB=${R_RCPP}/libs
R_RINSIDE=$(${RBIN} --slave --no-save -e "cat(find.package('RInside'))")
R_RINSIDE_INCLUDE=${R_RINSIDE}/include
R_RINSIDE_LIB=${R_RINSIDE}/lib

echo "R executable is ${RBIN}"
echo "R include is ${R_INCLUDE}"
echo "R library is ${R_LIBRARY}"
echo "BH is ${R_BH}"
echo "BH include is ${R_BH_INCLUDE}"
echo "Rcpp is ${R_RCPP}"
echo "Rcpp include is ${R_RCPP_INCLUDE}"
echo "Rcpp lib is ${R_RCPP_LIB}"
echo "RInside is ${R_RINSIDE}"
echo "RInside include is ${R_RINSIDE_INCLUDE}"
echo "RInside lib is ${R_RINSIDE_LIB}"

RUSER=$(${RBIN} --slave --no-save -e "cat(Sys.getenv('R_LIBS_USER'))")



#echo ${RUSER}
echo " "
#: ${R_LIBS_USER=`R LIBS_USER`}
#if test -z "${R_LIBS_USER}"; then
#  echo "could not determine R_LIBS_USER"
#  exit 1
#fi

echo " "
echo " "
#echo ${R_LIBS_USER}

#RHOME=$(${RBIN} --slave --no-save -e 'cat(R.home())')


#echo ${RHOME}

rm -rf _builds

# cmake -H. -B_builds \
#     -DCMAKE_VERBOSE_MAKEFILE=ON \
#     -DCMAKE_BUILD_TYPE=Release \
#     -DCMAKE_INSTALL_PREFIX=_install \
#     -DR_HOME=${R_HOME} \
#     -DR_BIN=${RBIN} \
#     -DR_INCLUDE=${R_INCLUDE} \
#     -DR_LIBRARY=${DR_LIBRARY} \
#     -DR_USER=${R_USER} \
#     -DR_BH=${R_BH} \
#     -DR_BH_INCLUDE=${R_BH_INCLUDE} \
#     -DR_RCPP=${R_RCPP} \
#     -DR_RCPP_INCLUDE=${R_RCPP_INCLUDE} \
#     -DR_RCPP_LIB=${R_RCPP_LIB} \
#     -DCMAKE_SHARED_LIBRARY_PREFIX_CXX=""




#    cmake --build _builds --target install --config Release

pwd
cd src/child 



cmake -H. -B_builds \
    -DCMAKE_VERBOSE_MAKEFILE=ON \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=_install \
    -DRHOME=${R_HOME} \
    -DRBIN=${RBIN} \
    -DR_INCLUDE=${R_INCLUDE} \
    -DR_LIBRARY=${R_LIBRARY} \
    -DR_USER=${R_USER} \
    -DR_BH=${R_BH} \
    -DR_BH_INCLUDE=${R_BH_INCLUDE} \
    -DR_RCPP=${R_RCPP} \
    -DR_RCPP_INCLUDE=${R_RCPP_INCLUDE} \
    -DR_RCPP_LIB=${R_RCPP_LIB} \
    -DR_RINSIDE=${R_RINSIDE} \
    -DR_RINSIDE_INCLUDE=${R_RINSIDE_INCLUDE} \
    -DR_RINSIDE_LIB=${R_RINSIDE_LIB} \
    -DCMAKE_SHARED_LIBRARY_PREFIX_CXX=""

 cmake --build _builds --target install --config Release

cd ../..

pwd

cp _install/lib/processR.so libs/processR.so || echo "Failed: processR.so -> src"
cp _install/libs/processR.dylib inst/libs/processR.so || echo "Failed: processR.dylib -> src"
cp -a src/child/_install/bin/rchild inst/bin/rchild || echo "Failed: rchild -> bin"
cp -a src/child/_install/bin/rchild.exe inst/bin/rchild.exe || echo "Failed: rchild -> bin"

pwd


#clean upls 
rm -r src/child/_install
rm -r src/child/_builds
# rm -r _install
# rm -r _buildsls 

